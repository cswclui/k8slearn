proxy:
  title: PolyU Virtual Labs - ${proxy.course-id}
  course-id: COMP1004
  unsafe-label: true
  users:
  - name: jack
    password: password
    groups: admins, comp1234, comp2345
  - name: jeff
    password: password
  admin-groups: admins
  authentication: simple
  container-backend: kubernetes
  container-wait-time: 1200000
  #template-path: /etc/shinyproxy/config/templates
  engagement:
    automatic-timeout: 60000
    enabled: true
    filter-header:
    - 33421
    - 33434
    - 33482
    max-age: PT4H
  heartbeat-rate: 10000
  heartbeat-timeout: 50000
  kubernetes:
    custom-namespace: true
    internal-networking: true
    namespace: shinyproxy
    namespace-prefix: vlab
    pod-wait-time: 120000
    image-pull-policy: Always
  landing-page: /
  livenessProbe: {}
  logo-url: https://www.openanalytics.eu/shinyproxy/logo.png
  port: 8080
  readinessProbe: {}
  same-site-cookie: none
  filebrowser:
    container-image: cswclui/myfilebrowser
    port: 9000 
    container-cmd: ["/filebrowser","-b","#{proxySpec.containerSpecs[0].env.get('SHINYPROXY_PUBLIC_PATH')}",
    "--database=/home/rootless/database.db"
    ]
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/data"
          name: "user-volume"
          # subPath: workspace
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
  specs:
  - id: mysql
    display-name: MySQL Lab
    description: Can be customized by teacher123
    container-image: cswclui/vscode-sidu:1.1
    container-cmd: 
      - bash
      - -c
      - > 
        cd ~/workspace/ &&
        git init && git config core.sparseCheckout true &&
        git remote add origin  https://github.com/cswclui/demo_lab &&
        echo "lab1" >> .git/info/sparse-checkout &&
        git pull origin main 
        ; pwd
        ; cd ~/workspace/lab1 && bash init.sh
        ; start.sh
    container-cpu-limit: 2000m #2VCPU
    container-cpu-request: 200m 
    container-memory-limit: 1000Mi
    container-memory-request: 500Mi
    container-env:
      MYSQL_ROOT_PASSWORD: 12345
      START_MYSQL: true
      START_APACHED: true
      COURSEID: "${proxy.course-id}"
      APPID: "#{proxySpec.id}"
      #PS1: '\w\$ '
    port: 8081
    sub-apps:
    - description:  SIDU is a simple, intuitive and easy database admin tool for MySQl and Postgre DB.
      display-name: SIDU database admin tool
      path: port/80/index.php
    - display-name: VSCode
      description: 123 Start a terminal within VSCode to access the MySQL database using mysql command line client.
      path: ""
      
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/root/workspace"
          name: "user-volume"
          subPath: workspace/#{proxySpec.containerSpecs[0].env.COURSEID}/#{proxySpec.containerSpecs[0].env.APPID}
        - mountPath: "/root/.vscode"
          name: "user-volume"
          subPath: cfg/vscode
        - mountPath: "/var/lib/mysql"
          name: "user-volume"
          subPath: db/${proxy.course_id}/mysql
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"
  - id: vscode-python
    display-name: VSCode with Python
    description: 
    container-image: cswclui/vscode-sidu:1.1
    container-cmd:
    - start.sh
    container-cpu-limit: 2000m #2VCPU
    container-cpu-request: 200m 
    container-memory-limit: 1000Mi
    container-memory-request: 500Mi
    container-env:
      MYSQL_ROOT_PASSWORD: 12345
      START_MYSQL: false
      START_APACHED: false
    port: 8081
    courses: ["comp1001", "comp1002", "comp1003"]
    sub-apps:
    - description: 
      display-name: Launch App
      path: ""
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/root/workspace"
          name: "user-volume"
          subPath: workspace/vscode-pytyon
        - mountPath: "/root/.vscode"
          name: "user-volume"
          subPath: cfg/vscode
        - mountPath: "/var/lib/mysql"
          name: "user-volume"
          subPath: mysql
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"
  - id: docker
    display-name: Docker playground
    description: You can try Docker using this app. 123456
    container-image: cswclui/rootless-dind:1.1
    container-cpu-limit: 2000m
    container-cpu-request: 200m
    container-memory-limit: 1500Mi
    container-memory-request: 500Mi
    container-privileged: true
    port: 8081
    sub-apps:
    - description: 
      display-name: Launch App
      path: ""
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/home/rootless/workspace"
          name: "user-volume"
          subPath: workspace/docker-playground
        - mountPath: "/home/rootless/app/vscode"
          name: "user-volume"
          subPath: cfg/vscode       
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"
  - id: rstudio
    description:  The files will only persist if it is stored under /home/rstudio/workspace 
    display-name: RStudio
    container-image: cswclui/myrstudio:2.9
    container-cpu-limit: 2000m
    container-cpu-request: 200m
    container-memory-limit: 2000Mi
    container-memory-request: 500Mi
    container-env:
      #XDG_DATA_HOME: "/rstudio-state" #storing rstudio state data:seems ignored
      DISABLE_AUTH: true
      USERID: rstudio
      WWW_ROOT_PATH: '#{proxySpec.containerSpecs[0].env.get(''SHINYPROXY_PUBLIC_PATH'')}'
    port: 8787   
    sub-apps:
    - description: 
      display-name: Launch App
      path: ""
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/home/rstudio/workspace"
          name: "user-volume"
          subPath: workspace/RStudio
        - mountPath: "/home/rstudio/.R"
          name: "user-volume"
          subPath: cfg/RStudio/.R
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"
  - id: jupyter
    display-name: Jupyter Notebook
    description: The id should be "jupyter" (hard-coded in the nginx rule). install package in user's !pip install --user flask
    container-image: cswclui/mynotebook:2.0
    container-cmd: ["mystart.sh", 
    "start-notebook.sh", "--NotebookApp.token=''", 
    --NotebookApp.allow_origin='*',
    --notebook-dir='/home/jovyan/workspace',
    "--NotebookApp.base_url=#{proxySpec.containerSpecs[0].env.get('SHINYPROXY_PUBLIC_PATH')}"]
    container-cpu-limit: 2000m
    container-cpu-request: 200m
    container-memory-limit: 2000Mi
    container-memory-request: 400Mi
    port: 7777
    sub-apps:
    - description: 
      display-name: Launch App
      path: ""
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/home/jovyan/workspace"
          name: "user-volume"
          subPath: workspace/jupyter
        - mountPath: "/home/jovyan/.ipython"
          name: "user-volume"
          subPath: cfg/jupyter/.ipython
        - mountPath: "/home/jovyan/.local"
          name: "user-volume"
          subPath: cfg/jupyter/.local
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"

  - id: oracle
    display-name: Oracle Database
    description: oracle ,mysql datagrip vscode (with mysql 8 server )111
    container-image: cswclui/oracle-mysql-datagrip-vscode:1.2
    port: 8081 
    container-cpu-limit: 2000m
    container-cpu-request: 200m
    container-memory-limit: 4000Mi
    container-memory-request: 500Mi
    container-cmd: ["/usr/local/bin/start.sh"] 
    container-env:
      WWW_ROOT_PATH: "#{proxySpec.containerSpecs[0].env.get('SHINYPROXY_PUBLIC_PATH')}"
    sub-apps:
    - description:  Launch a terminal to start Oracle database server (start-oracle), MySQL 8 Server (start-mysql) and DataGrip (start-datagrip)
      display-name: VSCode
      path: ""
    - display-name: DataGrip
      description: Launch the Jetbrain Datagrip to access DB
      path: "db"
    kubernetes-pod-patches: #bind container to Ceph volume
    |
      - op: add
        path: /spec/containers/0/volumeMounts
        value:
        - mountPath: "/home/oracle/workspace"
          name: "user-volume"
          subPath: workspace/oracle
        - mountPath: "/home/oracle/.vscode"
          name: "user-volume"
          subPath: cfg/vscode
        - mountPath: "/root"
          name: "user-volume"
          subPath: cfg/datagrip
      - op: add
        path: /spec/volumes
        value:
        - name: "user-volume"
          namespace: shinyproxy
          persistentVolumeClaim:
            claimName: "ceph-pvc-#{proxy.userId}"
      - op: add
        path: /spec/containers/0/resources/requests/ephemeral-storage
        value: "1Gi"
#will not persist user installed librarires




